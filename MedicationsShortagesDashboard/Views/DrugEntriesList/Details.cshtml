<!--[if lt IE 9]><script language="javascript" type="text/javascript" src="excanvas.js"></script><![endif]-->
<script type="text/javascript" src="~/Scripts/jqPlot/jquery.min.js"></script>
<script type="text/javascript" src="~/Scripts/jqPlot/jquery.jqplot.min.js"></script>
<script type="text/javascript" src="~/Scripts/jqPlot/plugins/jqplot.dateAxisRenderer.js"></script>
<link rel="stylesheet" type="text/css" href="~/Scripts/jqPlot/css/jquery.jqplot.css" />

@using MedicationsShortagesDashboard.Models;
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @model Tuple<DrugEntry, Message>
}

<div id="secondaryTitle">
    @Html.DisplayFor(tuple => tuple.Item1.Brand)
</div>
<div id="basicDrugInformation">
    <ul>
        <li>Dosage: @Html.DisplayFor(tuple => tuple.Item1.Dosage)</li>
        <li>NDC: @Html.DisplayFor(tuple => tuple.Item1.NDC)</li>
        <li>Generic Name: @Html.DisplayFor(tuple => tuple.Item1.Generic)</li>
        <li>Current Status: @Html.DisplayFor(tuple => tuple.Item1.CurrentStatus)</li>
    </ul>
</div>

<div id="shortageHistoryChart">
</div>


<div id="shortageHistory">
    <ul></ul>
</div>
@section scripts{
<script type="text/javascript">
    var shortageHistoryPlotData = Array();
    $.getJSON('/api/Shortage/' + '@Model.Item1.NDC', function (shortagesJsonPayload) {
        $(shortagesJsonPayload).each(function (i, item) {
            $('#shortageHistory > ul').append('<li>' + item.Status + formatDateForOutput(item.DateTime) + '</li>');

            if (item.Status == "severe") {
                shortageHistoryPlotData.push([item.DateTime.replace("T", " "), 0]);
            }
            else if (item.Status == "warning") {
                shortageHistoryPlotData.push([item.DateTime.replace("T", " "), 1]);
            }
            else {
                shortageHistoryPlotData.push([item.DateTime.replace("T", " "), 2]);
            }
        });

        if ($(shortagesJsonPayload).length > 0) {
            $('#shortageHistory').prepend('<u>Shortage History</u>');
            shortageHistoryPlotData.reverse(); // Need to reverse, since entries are in desc. order.
            plotShortageHistory();
        }
        else {
            $('#shortageHistory').prepend('No shortages have been reported for this medication.');
        }
    });

    // Plots the shortage history chart
    function plotShortageHistory() {
        var plot1 = $.jqplot('shortageHistoryChart', [shortageHistoryPlotData], {
            title: 'Shortage History',
            animate: true,
            axes: {
                xaxis: { renderer: $.jqplot.DateAxisRenderer },
                yaxis: {
                    ticks: [[0, 'Severe'], [1, 'Warning'], [2, 'Good']]
                }
            },
            series: [{
                lineWidth: 4,
                markerOptions: { style: 'filledCircle' },
                color: '#005BA5',
                rendererOptions: {
                    animation: {
                        speed: 1500
                    }
                }
            }
            ]
        });

        // Set the color of the 3 ticks to correspond with the colors used on the Current Shortages page
        var axisname = "yaxis";
        var ticks = $('div.jqplot-yaxis').find('div.jqplot-yaxis-tick');

        $(ticks[0]).css('color', '#FF334A'); // Severe
        $(ticks[1]).css('color', '#FFA84A'); // Warning
        $(ticks[2]).css('color', '#8DB987'); // Good
    }

    function formatDateForOutput(dateTime) {
        dateObject = new Date(dateTime.replace("T", " "));
        return " at " + dateObject.toLocaleTimeString() + " on " + dateObject.toLocaleDateString();
    }
</script>
}

<div class="expandMessagePost">
    <input onclick="return changeMessagePostButtonText(this)" type="button" value="POST DISCUSSION" id="messageToggle" />
</div>

<div class="messagePosting" style="display:none">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "createMessage", @action = "/api/Message" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        @Html.Hidden("NDC", @Model.Item1.NDC)
        @Html.Hidden("User", @ViewData["Username"])

        <div class="editor-field">
            @Html.TextArea("Text", @Model.Item2.Text)
            @Html.ValidationMessageFor(tuple => tuple.Item2.Text)<br />
        </div>
        
        <input type="submit" value="Post Discussion" />
    }
</div>

<div id="messageListing">
    <ul></ul>
</div>

<script type="text/javascript">
    // If user isn't logged in, hide submission/ignore drug visits
    // Otherwise, continue to else statement and figure out drug visit stuff
    var userLoggedIn = @Html.Raw(Json.Encode(ViewData["Username"])) + '';
    var dateLastSeen = null;
    if (userLoggedIn == "Guest") {
        $('.expandMessagePost').hide();
    }
    // If they're logged in but no pairing of user/NDC exists, set all messages to unread
    // If they're logged in and have visited the page, compare the date in the DrugVisit entry
    // and compare that to the message dates, and if they're newer, set them to unread
    else {
        $.getJSON("/api/DrugVisit", function (drugVisitsJsonPayload) {
            $(drugVisitsJsonPayload).each(function (i, item) {
                // Page has been visited
                if (item.NDC == '@Model.Item1.NDC' && item.Username == userLoggedIn) {
                    dateLastSeen = item.Date;
                }
            });
        }).complete( function() {
            $.getJSON("/api/Message/", function (messagesJsonPayload) {
                $(messagesJsonPayload).each(function (i, item) {
                    if (item.NDC == '@Model.Item1.NDC') {
                        var badge = "";
                        // Check (if user logged in) if unread, update DrugVisit entry
                        if (userLoggedIn != "Guest") {
                            if (dateLastSeen != null) {
                                if (item.Date > dateLastSeen) {
                                    badge = " - [UNREAD]";
                                }
                            }
                            else {
                                badge = " - [UNREAD]";
                            }
                        }
                        $("#messageListing > ul").append('<li> \
                                                    ' + '<div class="messageTitle">' + item.User + formatDateForOutput(item.Date) + '<em>' + badge + '</em>' + '</div>' + ' \
                                                    ' + '<div class="messageBody">' + item.Text + '</div>' + ' \
                                                     </li>');
                    }
                }
                );

                if ($(messagesJsonPayload).length > 0) {
                    $("#messageListing").prepend("<br ><u>DISCUSSION:</u>");
                }
                else {
                    $("#messageListing").prepend("No discussion has been posted for this shortage.");
                }
            });
        });
    }

    

    // Update Drug Visit entry
    if (userLoggedIn != "Guest") {
        var data = { "Username": userLoggedIn, "NDC": '@Model.Item1.NDC' };
        $.ajax({
            url: '/api/DrugVisit/Post',
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(data),
        });
    }

    $('.expandMessagePost').click(function () {
        $('.messagePosting').toggle();
    });

    function changeMessagePostButtonText(b) {
        if (b.value == "POST DISCUSSION")
            b.value = "HIDE POSTING";
        else
            b.value = "POST DISCUSSION";
    }

</script>