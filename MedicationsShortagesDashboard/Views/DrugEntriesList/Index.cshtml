@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="body">
    <div id="loadingAnimation">
        <img src="~/Images/loading.gif">
    </div>
    <div id="listContainer" >
        <div id="severeContainer" class="container">
            <span class="secondaryTitle">Severe</span>
            <ul id="severeWatchList" class="shortageList">
            </ul>
            <ul id="severeList" class="shortageList">
            </ul>
        </div>
        <div id="warningContainer" class="container">
            <span class="secondaryTitle">Warning</span>
            <ul id="warningWatchList" class="shortageList">
            </ul>
            <ul id="warningList" class="shortageList">
            </ul>
        </div>
        <div id="goodContainer" class="container">
            <span class="secondaryTitle">Good</span>
            <ul id="goodWatchList" class="shortageList">
            </ul>
            <ul id="goodList" class="shortageList">
            </ul>
        </div>
        <div id="recentContainer" class="container">
            <span class="secondaryTitle">Recent</span>
            <ul id="recentList" class="shortageList">
            </ul>
        </div>
    </div>
</div>

@section scripts{
<script type="text/javascript">
$('#listContainer').hide();
var loggedInAs = '@Html.Encode(ViewData["Username"])';
$(function()
{
    $.getJSON('/api/WatchListItem/' + loggedInAs, function (watchListJsonPayload) {
        var watchListNdcs = Array();
        $(watchListJsonPayload).each(function(i, watchListItem) {
            watchListNdcs.push(watchListItem.Ndc);
        });

        var recent = new Array();

        // Get all drugs
        $.getJSON('/api/DrugEntry', function (drugJsonPayload) {
            $(drugJsonPayload).each(function (i, item) {

                recent.push(item);

                // This drug is in the user's watch list
                if ($.inArray(item.NDC, watchListNdcs) != -1) {
                    shortage = getShortageItemHTMLWatchList(item.Brand, item.Dosage, item.NDC, item.CurrentStatus);

                    if (item.CurrentStatus === "severe") {
                        $(shortage).appendTo('#severeWatchList').addClass("severeItem");
                    }
                    else if (item.CurrentStatus === "warning") {
                        $(shortage).appendTo('#warningWatchList').addClass("warningItem");
                    }
                    else {
                        $(shortage).appendTo('#goodWatchList').addClass("goodItem");
                    }
                }
                else {
                    shortage = getShortageItemHTML(item.Brand, item.Dosage, item.NDC, item.CurrentStatus);

                    if (item.CurrentStatus === "severe") {
                        $(shortage).appendTo('#severeList').addClass("severeItem");
                    }
                    else if (item.CurrentStatus === "warning") {
                        $(shortage).appendTo('#warningList').addClass("warningItem");
                    }
                    else {
                        $(shortage).appendTo('#goodList').addClass("goodItem");
                    }
                }
            });

            recent.sort(function (a, b) { return a.LastUpdated < b.LastUpdated; });
            for (var i = 0; i < recent.length && i < 10; i++) {
                var item = recent[i];
                var shortage = getShortageItemHTML(item.Brand, item.Dosage, item.NDC, item.CurrentStatus);

                if (item.CurrentStatus === "severe") {
                    $(shortage).appendTo('#recentList').addClass("severeItem");
                }
                else if (item.CurrentStatus === "warning") {
                    $(shortage).appendTo('#recentList').addClass("warningItem");
                }
                else {
                    $(shortage).appendTo('#recentList').addClass("goodItem");
                }
            }

            // Page has loaded. Stop the loading animation
            $('#loadingAnimation').hide();
            $('#listContainer').show();
        });

    });
});

function getNonWatchListShortageCardButtonHtml(ndc, currentStatus) {
    if (loggedInAs == "Guest") {
        return '';
    }

    return '<li class="right"> \
                <a href="#" onClick="addToWatchList(' + '\'' + loggedInAs + '\',\'' + ndc + '\', \'' + currentStatus + '\')"> \
                    <img src="/images/not_favorite.png"> \
                </a> \
           </li>';
}

function getWatchListShortageCardButtonHtml(ndc, currentStatus) {
    if (loggedInAs == "Guest") {
        return '';
    }

    return '<li class="right"> \
                <a href="#" onClick="removeFromWatchList(' + '\'' + loggedInAs + '\',\'' + ndc + '\', \'' + currentStatus + '\')"> \
                    <img src="/images/favorite.png"> \
                </a> \
            </li>';
}

function getShortageItemHTML(brand, dosage, ndc, currentStatus) {
    return '<li id="' + ndc + '"> \
                   <ul class="shortageCard"> \
                       <li class="left"> \
                           <span><a href=/DrugEntriesList/Details/' + ndc + ">" + brand + ' ' + dosage + '</a></span> \
                       </li>' +
                       getNonWatchListShortageCardButtonHtml(ndc, currentStatus) +
                   '</ul> \
                </li>';
};

function getShortageItemHTMLWatchList(brand, dosage, ndc, currentStatus) {
    return '<li id="' + ndc + '"> \
                <ul class="shortageCard"> \
                    <li class="left"> \
                        <span><a href=/DrugEntriesList/Details/' + ndc + ">" + brand + ' ' + dosage + '</a></span> \
                    </li>' +
                    getWatchListShortageCardButtonHtml(ndc, currentStatus) +
                '</ul> \
            </li>';
};

function addToWatchList(username, ndc, currentStatus) {
    $.ajax({
        url: '/api/WatchListItem/' + username + "/" + ndc,
        type: 'POST',
        success: function () {
            if ($("#" + ndc).length > 0) {
                $("#" + ndc).prependTo("#" + currentStatus + "WatchList");
                $("#" + ndc + " > .shortageCard > .right").replaceWith(getWatchListShortageCardButtonHtml(ndc, currentStatus));
            }
        }
    });
};

function removeFromWatchList(username, ndc, currentStatus) {
    $.ajax({
        url: '/api/WatchListItem/' + username + "/" + ndc,
        type: 'DELETE',
        success: function () {
            if ($("#" + ndc).length > 0) {
                $("#" + ndc).prependTo("#" + currentStatus + "List");
                $("#" + ndc + " > .shortageCard > .right").replaceWith(getNonWatchListShortageCardButtonHtml(ndc, currentStatus));
            }
        },
    });
}

    // Filtering. Iterates over each of the 6 drug card containers (if you want to call them that?)
    // hides all elements which don't match the searchbar text. Shows all that do.
$("#searchbar").keyup(function () {
    var query = $("#searchbar").val();
    var drugListSelectors = ["#recentList", "#severeWatchList", "#warningWatchList", "#goodWatchList", "#severeList", "#warningList", "#goodList"];

    $(drugListSelectors).each( function(index, value) {
        $(value + " > li").each(function () {
            if ($(this).text().search(query) > -1) {
                $(this).show();
            }
            else {
                $(this).hide();
            }
        });
    });
});
</script>
}