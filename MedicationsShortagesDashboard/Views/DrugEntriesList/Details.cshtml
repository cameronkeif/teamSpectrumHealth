<!--[if IE]><script language="javascript" type="text/javascript" src="~/Scripts/jqPlot/excanvas.js"></script><![endif]-->
<script type="text/javascript" src="~/Scripts/jqPlot/jquery.min.js"></script>
<script type="text/javascript" src="~/Scripts/jqPlot/jquery.jqplot.min.js"></script>
<script type="text/javascript" src="~/Scripts/jqPlot/plugins/jqplot.dateAxisRenderer.js"></script>
<link rel="stylesheet" type="text/css" href="~/Scripts/jqPlot/css/jquery.jqplot.css" />

@using MedicationsShortagesDashboard.Models;
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @model Tuple<DrugEntry, Message>
}

<div id="secondaryTitle">
    @Html.DisplayFor(tuple => tuple.Item1.Brand)
</div>
<div id="basicDrugInformation">
    <ul>
        <li>Dosage: @Html.DisplayFor(tuple => tuple.Item1.Dosage)</li>
        <li>NDC: @Html.DisplayFor(tuple => tuple.Item1.NDC)</li>
        <li>Generic Name: @Html.DisplayFor(tuple => tuple.Item1.Generic)</li>
        <li>Current Status: @Html.DisplayFor(tuple => tuple.Item1.CurrentStatus)</li>
    </ul>
    <div id="submitButtonContainer"><button class="submitButton" id="submit_create_shortage" type="button">Create Shortage</button></div>
</div>

<div id="shortageHistoryChart">
</div>


<div id="shortageHistory">
    <ul></ul>
</div>
@section scripts{
<script type="text/javascript">
    var shortageHistoryPlotData = Array();
    var loginType = '@Html.Encode(ViewData["Type"])'

    if (loginType == "pharmadmin") {
        $("#submitButtonContainer").show();
    }

    $.getJSON('/api/Shortage/' + '@Model.Item1.NDC', function (shortagesJsonPayload) {
        $(shortagesJsonPayload).each(function (i, item) {
            $('#shortageHistory > ul').append('<li id=shortage_' + item.Id + '>' + item.Status + formatDateForOutput(item.DateTime) + '<span class="shortageLinks" >' +
                '<a href="/ShortagesList/Details/' + item.Id + '">Details</a>' +
                '<span class="adminLinks">' +
                '<a href="/ShortagesList/Edit/' + item.Id + '">Edit</a>' +
                '<a onclick="Delete(' + item.Id + ', ' + i + ')" href="#">Delete</a></span></span>' +
                '</li></div></li>');

            if (item.Status == "severe") {
                shortageHistoryPlotData.push([item.DateTime.replace("T", " "), 0]);
            }
            else if (item.Status == "warning") {
                shortageHistoryPlotData.push([item.DateTime.replace("T", " "), 1]);
            }
            else {
                shortageHistoryPlotData.push([item.DateTime.replace("T", " "), 2]);
            }
        });

        if (loginType == "pharmadmin") {
            $(".adminLinks").show();
        }

        if ($(shortagesJsonPayload).length > 0) {
            $('#shortageHistory').prepend('<u>Shortage History</u>');
            shortageHistoryPlotData.reverse(); // Need to reverse, since entries are in desc. order.
            plotShortageHistory();
        }
        else {
            $('#shortageHistory').prepend('No shortages have been reported for this medication.');
        }
    });

    function Delete(id, plotDataIndex) {
        var result = confirm("Do you really want to delete this shortage?");
        if (result == true) {
            $.ajax({
                url: '/api/Shortage' + '/' + id,
                type: 'DELETE',
                success: function () {
                    window.location.reload();
                },
            });
        } 
    }

    // Plots the shortage history chart
    function plotShortageHistory() {
        var plot1 = $.jqplot('shortageHistoryChart', [shortageHistoryPlotData], {
            title: 'Shortage History',
            animate: true,
            axes: {
                xaxis: { renderer: $.jqplot.DateAxisRenderer },
                yaxis: {
                    ticks: [[0, 'Severe'], [1, 'Warning'], [2, 'Good']]
                }
            },
            series: [{
                lineWidth: 4,
                markerOptions: { style: 'filledCircle' },
                color: '#005BA5',
                rendererOptions: {
                    animation: {
                        speed: 1500
                    }
                }
            }
            ]
        });

        // Set the color of the 3 ticks to correspond with the colors used on the Current Shortages page
        var axisname = "yaxis";
        var ticks = $('div.jqplot-yaxis').find('div.jqplot-yaxis-tick');

        $(ticks[0]).css('color', '#FF334A'); // Severe
        $(ticks[1]).css('color', '#FFA84A'); // Warning
        $(ticks[2]).css('color', '#8DB987'); // Good
    }

    function formatDateForOutput(dateTime) {
        year = dateTime.substr(0, 4);
        month = dateTime.substr(5, 2);
        day = dateTime.substr(8, 2);

        hours = dateTime.substr(11, 2);
        minutes = dateTime.substr(14, 2);
        seconds = dateTime.substr(17, 2);
        dateObject = new Date(year, month, day, hours, minutes, seconds);
        return " at " + dateObject.toLocaleTimeString() + " on " + dateObject.toLocaleDateString();
    }

    $('#submit_create_shortage').click(function (e) {
        window.location.href = "/ShortagesList/Create/" + '@Html.DisplayFor(tuple => tuple.Item1.NDC)';
    });
</script>
}

<div class="expandMessagePost">
    <input onclick="return changeMessagePostButtonText(this)" type="button" value="POST DISCUSSION" id="messageToggle" />
</div>

<div class="messagePosting" style="display:none">
    <form id="postDiscussionForm">
        <input type=hidden name="ndc" id="ndc" value='@Model.Item1.NDC' />
        <input type=hidden name="user" id="user" value='@Html.Encode(ViewData["Username"])' />
        <textarea class="messagePostingBox" id="text" name="text" rows="5" cols ="50"></textarea>
        <button class="submitButton" id="submit" type="button">Post Discussion</button>
    </form>
</div>

<div id="messageListing">
    <ul></ul>
</div>

<script type="text/javascript">
    // If user isn't logged in, hide submission/ignore drug visits
    // Otherwise, continue to else statement and figure out drug visit stuff
    var userLoggedIn = @Html.Raw(Json.Encode(ViewData["Username"])) + '';
    var dateLastSeen = null;
    if (userLoggedIn == "Guest") {
        $('.expandMessagePost').hide();
    }
    // If they're logged in but no pairing of user/NDC exists, set all messages to unread
    // If they're logged in and have visited the page, compare the date in the DrugVisit entry
    // and compare that to the message dates, and if they're newer, set them to unread
    else {
        $.getJSON("/api/DrugVisit", function (drugVisitsJsonPayload) {
            $(drugVisitsJsonPayload).each(function (i, item) {
                // Page has been visited
                if (item.NDC == '@Model.Item1.NDC' && item.Username == userLoggedIn) {
                    dateLastSeen = item.Date;
                }
            });
        }).complete( function() {
            $.getJSON("/api/Message/", function (messagesJsonPayload) {
                $(messagesJsonPayload).each(function (i, item) {
                    if (item.NDC == '@Model.Item1.NDC') {
                        var badge = "";
                        // Check (if user logged in) if unread, update DrugVisit entry
                        if (userLoggedIn != "Guest") {
                            if (dateLastSeen != null) {
                                if (item.Date > dateLastSeen) {
                                    badge = "[UNREAD]";
                                }
                            }
                            else {
                                badge = "[UNREAD]";
                            }
                        }
                        $("#messageListing > ul").append('<li><div class="messageEntry"><div class="messageTitle"> \
                                                    ' + '<div class="messageInfo">' + item.User + formatDateForOutput(item.Date) + '</div>' + '\
                                                    ' + '<div class="messageBadge">' + badge + '</div></div>' + ' \
                                                    ' + '<div class="messageText">' + item.Text + '</div></div>' + ' \
                                                     </li>');
                    }
                }
                );

                if ($(messagesJsonPayload).length <= 0) {
                    $("#messageListing").prepend("No discussion has been posted for this shortage.");
                }
            });
        });
    }

    updateLastVisit();

    // Update Drug Visit entry
    function updateLastVisit() {
        if (userLoggedIn != "Guest") {
            var data = { "Username": userLoggedIn, "NDC": '@Model.Item1.NDC' };
            $.ajax({
                url: '/api/DrugVisit/Post',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(data),
            });
        }
    }

    $('.expandMessagePost').click(function () {
        $('.messagePosting').toggle();
    });

    function changeMessagePostButtonText(b) {
        if (b.value == "POST DISCUSSION")
            b.value = "HIDE POSTING";
        else
            b.value = "POST DISCUSSION";
    }

    $('#submit').click(function (e) {
        var submitData = $('#postDiscussionForm').serialize();
        console.log(submitData);
        $.post('@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Message", })', submitData)
        .success(function () {
            updateLastVisit();
            $.ajax({
                url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "DrugEntryManual/UpdateDrugLastPostTime", })',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify
            }).success(function () {
                location.reload();
            });
        });
    });

</script>
