@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="body">
    <div id="loadingAnimation">
        <img src="~/Images/loading.gif">
    </div>
    <div id="listContainer" >
        <div id="severeContainer" class="container">
            <span class="secondaryTitle">Severe</span>
            <ul id="severeWatchList" class="shortageList">
            </ul>
            <ul id="severeList" class="shortageList">
            </ul>
            <a id="severeFirst" href='#' class="pagingButton"><<</a>
            <a id="severePrevious" href='#' class="pagingButton"><</a>
            <span id="severePageNumber" class="pageNumber">1</span>
            <a id="severeNext" href='#' class="pagingButton">></a>
            <a id="severeLast" href='#' class="pagingButton">>></a>
        </div>
        <div id="warningContainer" class="container">
            <span class="secondaryTitle">Warning</span>
            <ul id="warningWatchList" class="shortageList">
            </ul>
            <ul id="warningList" class="shortageList">
            </ul>
            <a id="warningFirst" href='#' class="pagingButton"><<</a>
            <a id="warningPrevious" href='#' class="pagingButton"><</a>
            <span id="warningPageNumber" class="pageNumber">1</span>
            <a id="warningNext" href='#' class="pagingButton">></a>
            <a id="warningLast" href='#' class="pagingButton">>></a>
        </div>
        <div id="goodContainer" class="container">
            <span class="secondaryTitle">Good</span>
            <ul id="goodWatchList" class="shortageList">
            </ul>
            <ul id="goodList" class="shortageList">
            </ul>
            <a id="goodFirst" href='#' class="pagingButton"><<</a>
            <a id="goodPrevious" href='#' class="pagingButton"><</a>
            <span id="goodPageNumber" class="pageNumber">1</span>
            <a id="goodNext" href='#' class="pagingButton">></a>
            <a id="goodLast" href='#' class="pagingButton">>></a>
        </div>
        <div id="recentContainer" class="container">
            <span class="secondaryTitle">Recent</span>
            <ul id="recentList" class="shortageList">
            </ul>
            <a id="recentFirst" href='#' class="pagingButton"><<</a>
            <a id="recentPrevious" href='#' class="pagingButton"><</a>
            <span id="recentPageNumber" class="pageNumber">1</span>
            <a id="recentNext" href='#' class="pagingButton">></a>
            <a id="recentLast" href='#' class="pagingButton">>></a>
        </div>
    </div>
</div>

@section scripts{
<script type="text/javascript">
    $('#listContainer').hide();

    var loggedInAs = '@Html.Encode(ViewData["Username"])';

    var numRecentItems = 10;
    var itemsPerPage = 5;

    var recentIndex = 0;
    var goodIndex = 0;
    var warningIndex = 0;
    var severeIndex = 0;

    var recentItems = [];
    var goodItems = [];
    var warningItems = [];
    var severeItems = [];
    var watchListNdcs = [];

    function setupButton(name, list, index) {
        if (index == 0) {
            $("#" + name + "First").addClass('disabled');
            $("#" + name + "Previous").addClass('disabled');
        }
        else {
            $("#" + name + "First").removeClass('disabled');
            $("#" + name + "Previous").removeClass('disabled');
        }
        if (index == itemsPerPage * Math.ceil(list.length / itemsPerPage) - itemsPerPage) {
            $("#" + name + "Last").addClass('disabled');
            $("#" + name + "Next").addClass('disabled');
        }
        else {
            $("#" + name + "Last").removeClass('disabled');
            $("#" + name + "Next").removeClass('disabled');
        }
    }

    function setupButtons() {
        setupButton('recent', recentItems, recentIndex);
        setupButton('good', goodItems, goodIndex);
        setupButton('severe', severeItems, severeIndex);
        setupButton('warning', warningItems, warningIndex);
    }

    function displayList(list, appendTarget, startingIndex) {
        for (var i = startingIndex; i < list.length && i < itemsPerPage + startingIndex; i++) {
            var item = list[i];
            var shortage;
            if ($.inArray(item.NDC, watchListNdcs) != -1) {
                shortage = getShortageItemHTMLWatchList(item.Brand, item.Dosage, item.NDC, item.CurrentStatus);
                $(shortage).appendTo('#' + appendTarget + 'WatchList').addClass(appendTarget + "Item");
            }
            else {
                shortage = getShortageItemHTML(item.Brand, item.Dosage, item.NDC, item.CurrentStatus);
                $(shortage).appendTo('#' + appendTarget + 'List').addClass(appendTarget + "Item");
            }
        }
    }

    function displayRecent() {
        for (var i = recentIndex; i < recentItems.length && i < itemsPerPage + recentIndex; i++) {
            var item = recentItems[i];
            var shortage;

            if ($.inArray(item.NDC, watchListNdcs) != -1) {
                shortage = getShortageItemHTMLWatchList(item.Brand, item.Dosage, item.NDC, item.CurrentStatus);
            }
            else {
                shortage = getShortageItemHTML(item.Brand, item.Dosage, item.NDC, item.CurrentStatus);
            }

            if (item.CurrentStatus === "severe") {
                $(shortage).appendTo('#recentList').addClass("severeItem");
            }
            else if (item.CurrentStatus === "warning") {
                $(shortage).appendTo('#recentList').addClass("warningItem");
            }
            else {
                $(shortage).appendTo('#recentList').addClass("goodItem");
            }
        }
    }

    function display() {
        // This drug is in the user's watch list

        goodItems.sort(function (a, b) { if ($.inArray(a.NDC, watchListNdcs) != -1 && $.inArray(b.NDC, watchListNdcs) == -1) return -1; return 1; });
        warningItems.sort(function (a, b) { if ($.inArray(a.NDC, watchListNdcs) != -1 && $.inArray(b.NDC, watchListNdcs) == -1) return -1; return 1; });
        severeItems.sort(function (a, b) { if ($.inArray(a.NDC, watchListNdcs) != -1 && $.inArray(b.NDC, watchListNdcs) == -1) return -1; return 1; });

        displayList(goodItems, 'good', goodIndex);
        displayList(warningItems, 'warning', warningIndex);
        displayList(severeItems, 'severe', severeIndex);

        displayRecent();
        setupButtons();
    }

    $(document).ready(function()
    {
        $.getJSON('/api/WatchListItem/' + loggedInAs, function (watchListJsonPayload) {
            $(watchListJsonPayload).each(function(i, watchListItem) {
                watchListNdcs.push(watchListItem.Ndc);
            });

            var recentTemp = new Array();

            // Get all drugs
            $.getJSON('/api/DrugEntry', function (drugJsonPayload) {
                $(drugJsonPayload).each(function (i, item) {

                    recentTemp.push(item);

                    if (item.CurrentStatus === "severe") {
                        severeItems.push(item);
                    }
                    else if (item.CurrentStatus === "warning") {
                        warningItems.push(item);
                    }
                    else {
                        goodItems.push(item);
                    }

                });

                recentTemp.sort(function (a, b) { if (a.LastUpdated < b.LastUpdated) return 1; return -1; });

                for (var i = 0; i < recentTemp.length && i < numRecentItems; i++) {
                    recentItems.push(recentTemp[i]);
                }

                display();

                // Page has loaded. Stop the loading animation
                $('#loadingAnimation').hide();
                $('#listContainer').show();
            });
        });
    });

    function getNonWatchListShortageCardButtonHtml(ndc, currentStatus) {
        if (loggedInAs == "Guest") {
            return '';
        }

        return '<li class="right"> \
                    <a href="#" onClick="addToWatchList(' + '\'' + loggedInAs + '\',\'' + ndc + '\', \'' + currentStatus + '\')"> \
                        <img src="/images/not_favorite.png"> \
                    </a> \
               </li>';
    }

    function getWatchListShortageCardButtonHtml(ndc, currentStatus) {
        if (loggedInAs == "Guest") {
            return '';
        }

        return '<li class="right"> \
                    <a href="#" onClick="removeFromWatchList(' + '\'' + loggedInAs + '\',\'' + ndc + '\', \'' + currentStatus + '\')"> \
                        <img src="/images/favorite.png"> \
                    </a> \
                </li>';
    }

    function getShortageItemHTML(brand, dosage, ndc, currentStatus) {
        return '<li id="' + ndc + '"> \
                       <ul class="shortageCard"> \
                           <li class="left"> \
                               <span><a href=/DrugEntriesList/Details/' + ndc + ">" + brand + ' ' + dosage + '</a></span> \
                           </li>' +
                           getNonWatchListShortageCardButtonHtml(ndc, currentStatus) +
                       '</ul> \
                    </li>';
    };

    function getShortageItemHTMLWatchList(brand, dosage, ndc, currentStatus) {
        return '<li id="' + ndc + '"> \
                    <ul class="shortageCard"> \
                        <li class="left"> \
                            <span><a href=/DrugEntriesList/Details/' + ndc + ">" + brand + ' ' + dosage + '</a></span> \
                        </li>' +
                        getWatchListShortageCardButtonHtml(ndc, currentStatus) +
                    '</ul> \
                </li>';
    };

    function addToWatchList(username, ndc, currentStatus) {
        $.ajax({
            url: '/api/WatchListItem/' + username + "/" + ndc,
            type: 'POST',
            success: function () {
                if ($("#" + ndc).length > 0) {
                    $("#" + ndc).prependTo("#" + currentStatus + "WatchList");
                    $("#" + ndc + " .right").replaceWith(getWatchListShortageCardButtonHtml(ndc, currentStatus));
                }
                if ($("#recentList #" + ndc).length > 0) {
                    $("#recentList #" + ndc + " .right").replaceWith(getWatchListShortageCardButtonHtml(ndc, currentStatus));
                }
            }
        });
    };

    function removeFromWatchList(username, ndc, currentStatus) {
        $.ajax({
            url: '/api/WatchListItem/' + username + "/" + ndc,
            type: 'DELETE',
            success: function () {
                if ($("#" + ndc).length > 0) {
                    $("#" + ndc).prependTo("#" + currentStatus + "List");
                    $("#" + ndc + " .right").replaceWith(getNonWatchListShortageCardButtonHtml(ndc, currentStatus));
                }
                if ($("#recentList #" + ndc).length > 0) {
                    $("#recentList #" + ndc + " .right").replaceWith(getNonWatchListShortageCardButtonHtml(ndc, currentStatus));
                }
            },
        });
    }

        // Filtering. Iterates over each of the 6 drug card containers (if you want to call them that?)
        // hides all elements which don't match the searchbar text. Shows all that do.
    $("#searchbar").keyup(function () {
        var query = $("#searchbar").val();
        var drugListSelectors = ["#recentList", "#severeWatchList", "#warningWatchList", "#goodWatchList", "#severeList", "#warningList", "#goodList"];

        $(drugListSelectors).each( function(index, value) {
            $(value + " > li").each(function () {
                if ($(this).text().search(query) > -1) {
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            });
        });
    });

    $("#recentFirst, #goodFirst, #warningFirst, #severeFirst").click(function () {
        $(this).siblings('.shortageList').empty();
        var id = $(this).attr('id');
        var index = id.indexOf("First");
        var listType = id.substr(0, index); // Good, warning, severe, or recent
        if (listType == "good") {
            goodIndex = 0;
            $("#goodPageNumber").text(1);
            displayList(goodItems, 'good', goodIndex);
        }
        else if (listType == "severe") {
            severeIndex = 0;
            $("#severePageNumber").text(1);
            displayList(severeItems, 'severe', severeIndex);
        }
        else if (listType == "warning") {
            warningIndex = 0;
            $("#warningPageNumber").text(1);
            displayList(warningItems, 'warning', warningIndex);
        }
        else if (listType == "recent") {
            recentIndex = 0;
            $("#recentPageNumber").text(1);
            displayRecent();
        }
        setupButtons();
    });

    $("#recentPrevious, #goodPrevious, #warningPrevious, #severePrevious").click(function () {
        $(this).siblings('.shortageList').empty();
        var id = $(this).attr('id');
        var index = id.indexOf('Previous');
        var listType = id.substr(0, index); // Good, warning, severe, or recent
        if (listType == "good") {
            goodIndex -= itemsPerPage;
            $("#goodPageNumber").text(goodIndex / itemsPerPage + 1);
            displayList(goodItems, 'good', goodIndex);
        }
        else if (listType == "severe") {
            severeIndex -= itemsPerPage;
            $("#severePageNumber").text(severeIndex / itemsPerPage + 1);
            displayList(severeItems, 'severe', severeIndex);
        }
        else if (listType == "warning") {
            warningIndex -= itemsPerPage;
            $("#warningPageNumber").text(warningIndex / itemsPerPage + 1);
            displayList(warningItems, 'warning', warningIndex);
        }
        else if (listType == "recent") {
            recentIndex -= itemsPerPage;
            $("#recentPageNumber").text(recentIndex / itemsPerPage + 1);
            displayRecent();
        }
        setupButtons();
    });

    $("#recentNext, #goodNext, #warningNext, #severeNext").click(function () {
        $(this).siblings('.shortageList').empty();
        var id = $(this).attr('id');
        var index = id.indexOf('Next');
        var listType = id.substr(0, index); // Good, warning, severe, or recent
        if (listType == "good") {
            goodIndex += itemsPerPage;
            $("#goodPageNumber").text(goodIndex / itemsPerPage + 1);
            displayList(goodItems, 'good', goodIndex);
        }
        else if (listType == "severe") {
            severeIndex += itemsPerPage;
            $("#severePageNumber").text(severeIndex / itemsPerPage + 1);
            displayList(severeItems, 'severe', severeIndex);
        }
        else if (listType == "warning") {
            warningIndex += itemsPerPage;
            $("#warningPageNumber").text(warningIndex / itemsPerPage + 1);
            displayList(warningItems, 'warning', warningIndex);
        }
        else if (listType == "recent") {
            recentIndex += itemsPerPage;
            $("#recentPageNumber").text(recentIndex / itemsPerPage + 1);
            displayRecent();
        }
        setupButtons();
    });

    $("#recentLast, #goodLast, #warningLast, #severeLast").click(function () {
        $(this).siblings('.shortageList').empty();
        var id = $(this).attr('id');
        var index = id.indexOf('Last');
        var listType = id.substr(0, index); // Good, warning, severe, or recent
        if (listType == "good") {
            goodIndex = itemsPerPage * Math.ceil(goodItems.length / itemsPerPage) - itemsPerPage;
            $("#goodPageNumber").text(goodIndex / itemsPerPage + 1);
            displayList(goodItems, 'good', goodIndex);
        }
        else if (listType == "severe") {
            severeIndex = itemsPerPage * Math.ceil(severeItems.length / itemsPerPage) - itemsPerPage;
            $("#severePageNumber").text(severeIndex / itemsPerPage + 1);
            displayList(severeItems, 'severe', severeIndex);
        }
        else if (listType == "warning") {
            warningIndex = itemsPerPage * Math.ceil(warningItems.length / itemsPerPage) - itemsPerPage;
            $("#warningPageNumber").text(warningIndex / itemsPerPage + 1);
            displayList(warningItems, 'warning', warningIndex);
        }
        else if (listType == "recent") {
            recentIndex = itemsPerPage * Math.ceil(recentItems.length / itemsPerPage) - itemsPerPage;
            $("#recentPageNumber").text(recentIndex / itemsPerPage + 1);
            displayRecent();
        }
        setupButtons();
    });

</script>
}